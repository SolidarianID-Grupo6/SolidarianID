name: solidarianid

services:
  # Microservices:
  gateway:
    build:
      context: .
      dockerfile: ./apps/gateway/Dockerfile
    container_name: solidarianid-gateway
    env_file:
      - .env
    environment:
      - PORT=3000
    ports:
      - "3000:3000"
    volumes:
      - ./apps/gateway:/app/apps/gateway
      - ./node_modules:/usr/src/app/node_modules
    networks:
      - solidarianetwork

  communities:
    build:
      context: .
      dockerfile: ./apps/communities/Dockerfile
    container_name: solidarianid-communities
    env_file:
      - .env
    environment:
      - PORT=3001
      - DATABASE_URL=mongodb://${MONGO_USERNAME}:${MONGO_PASSWORD}@${MONGO_HOST}:${MONGO_PORT}/${MONGO_DB}
    ports:
      - "3001:3001"
    volumes:
      - ./apps/communities:/app/apps/communities
    depends_on:
      - mongo
    networks:
      - solidarianetwork

  users:
    build:
      context: .
      dockerfile: ./apps/users/Dockerfile
    container_name: solidarianid-users
    env_file:
      - .env
    environment:
      - PORT=3002
    ports:
      - "3002:3002"
    volumes:
      - ./apps/users:/app/apps/users
      - ./libs:/app/libs
    depends_on:
      - postgres
      - redis
      - nats
      - neo4j
    networks:
      - solidarianetwork

  statistics:
    build:
      context: .
      dockerfile: ./apps/statistics/Dockerfile
    container_name: solidarianid-statistics
    env_file:
      - .env
    environment:
      - PORT=3003
    ports:
      - "3003:3003"
    volumes:
      - ./apps/statistics:/app/apps/statistics
      - ./libs:/app/libs
    networks:
      - solidarianetwork

  front-end:
    build:
      context: .
      dockerfile: ./apps/front-end/Dockerfile
    container_name: solidarianid-front-end
    env_file:
      - .env
    environment:
      - PORT=3004
    ports:
      - "3004:3004"
    volumes:
      - ./apps/front-end:/app/apps/front-end
    networks:
      - solidarianetwork

  # Databases:
  mongo:
    image: mongo:6.0
    restart: always
    container_name: solidarianid-mongo
    env_file:
      - .env
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGO_DB}
    volumes:
      - ./volumes/mongodata:/data/db
      - ./volumes/mongo-init-scripts:/docker-entrypoint-initdb.d
    ports:
      - '27017:27017'
    depends_on:
      - postgres
    networks:
      - solidarianetwork

  postgres:
    image: postgres:17
    restart: always
    env_file:
      - .env
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DEFAULT_DB}
    container_name: solidarianid-postgres
    volumes:
      - ./volumes/pgdata:/var/lib/postgresql/data
      - ./volumes/init.sql:/docker-entrypoint-initdb.d/init.sql # Mount the init script
    ports:
      - '5432:5432'
    networks:
      - solidarianetwork

  redis:
    image: redis:7
    restart: always
    container_name: solidarianid-redis
    volumes:
      - ./volumes/redisdata:/data/db
      - ./volumes/redis.conf:/usr/local/etc/redis/redis.conf
    ports:
      - "6379:6379"
    networks:
      - solidarianetwork
    command: [ "redis-server", "/usr/local/etc/redis/redis.conf" ]

  neo4j:
    image: neo4j:5-community
    restart: always
    environment:
      - NEO4J_AUTH=${NEO4J_USERNAME}/${NEO4J_PASSWORD}
      - NEO4J_dbms_default__database=${NEO4J_USERS_DATABASE}
      - NEO4JLABS_PLUGINS=["apoc"]
      - NEO4J_apoc_export_file_enabled=true
      - NEO4J_apoc_import_file_enabled=true
    container_name: solidarianid-neo4j
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - ./volumes/neo4jdata/data:/data
      - ./volumes/neo4jdata/conf:/conf
      - ./volumes/neo4jdata/logs:/logs
      - ./volumes/neo4jdata/plugins:/plugins
    networks:
      - solidarianetwork

  # Utils:
  pgadmin:
    image: dpage/pgadmin4:8.14
    restart: always
    container_name: solidarianid-pgadmin
    env_file:
      - .env
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD}
      - PGADMIN_CONFIG_SERVER_MODE=False
      - PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED=False
    ports:
      - '5050:80'
    depends_on:
      - postgres
    entrypoint: /bin/sh -c "chmod 600 /pgpass; /entrypoint.sh;"
    user: root
    configs:
      - source: servers.json
        target: /pgadmin4/servers.json
      - source: pgpass
        target: /pgpass
    networks:
      - solidarianetwork

  sonarqube:
    image: sonarqube:10-community
    container_name: solidarianid-sonarqube
    depends_on:
      - postgres
    env_file:
      - .env
    environment:
      - SONAR_JDBC_URL=jdbc:postgresql://postgres:5432/sonar
      - SONAR_JDBC_USERNAME=${POSTGRES_USER}
      - SONAR_JDBC_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - '9000:9000'
    networks:
      - solidarianetwork
    volumes:
      - sonarqube_conf:/opt/sonarqube/conf
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
      - sonarqube_temp:/opt/sonarqube/temp

  nats:
    image: nats:2.10
    container_name: solidarianid-nats
    ports:
      - "4222:4222" # Client connections
      - "8222:8222" # HTTP management interface (optional)
    networks:
      - solidarianetwork

volumes:
  mongodata:
  sonarqube_conf:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  sonarqube_temp:
  sonar_db:
  sonar_db_data:


configs:
  pgpass:
    content: postgres:5432:*:${POSTGRES_USER}:${POSTGRES_PASSWORD}
  servers.json:
    content: |
      {"Servers": {"1": {
        "Group": "Servers",
        "Name": "SolidarianID",
        "Host": "postgres",
        "Port": 5432,
        "MaintenanceDB": "${POSTGRES_DEFAULT_DB}",
        "Username": "${POSTGRES_USER}",
        "PassFile": "/pgpass",
        "SSLMode": "prefer"
      }}}

networks:
  solidarianetwork:
    driver: bridge
